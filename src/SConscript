import glob, re
import os

Import( "env" )
Import( "envJava" )
Import( "envPy" )
Import( "installPrefix" )

import distutils.sysconfig, os
vars = distutils.sysconfig.get_config_vars('CC', 'CXX', 'OPT', 'BASECFLAGS', 'CCSHARED', 'LDSHARED', 'SO')
for i in range(len(vars)):
    if vars[i] is None:
        vars[i] = ""
(cc, cxx, opt, basecflags, ccshared, ldshared, so_ext) = vars


env.Replace(SHLIBSUFFIX = '.so.$SHLIB_VERSION')

AvTranscoderVersion = '0.0.1'

sAvTranscoder = env.StaticLibrary(
    'sAvTranscoder',
    Glob( 'AvTranscoder/*.cpp' ) + Glob( 'AvTranscoder/DatasStructures/*.cpp' ) ,
    LIBS = [
        'libavutil',
        'libavcodec',
        'libavformat',
        'libswscale',
        #'pthread',
    ]
)

SharedAvTranscoder = env.SharedLibrary(
    'AvTranscoder',
    Glob( 'AvTranscoder/*.cpp' ) + Glob( 'AvTranscoder/DatasStructures/*.cpp' ) ,
    LIBS = [
        'libavutil',
        'libavcodec',
        'libavformat',
        'libswscale',
        #'pthread',
    ],
    SHLIB_VERSION = AvTranscoderVersion,
)

jAvTranscoder = envJava.SharedLibrary(
        'jAvTranscoder',
        source=['AvTranscoder/avTranscoder.i'],
        LIBS=[ 
            sAvTranscoder,
            'libavutil',
            'libavcodec',
            'libavformat',
            'libswscale',
        ],
    )

pyAvTranscoder = envPy.SharedLibrary(
        'AvTranscoder',
        source='AvTranscoder/avTranscoder.i',
        LIBS=[
            sAvTranscoder,
            'libavutil',
            'libavcodec',
            'libavformat',
            'libswscale',
            ],
    )

avTranscoder_class = env.Java(
      target='AvTranscoderClass',
      source= Glob( envJava['JARCHDIR'] ) )

avTranscoder_jar = env.Jar(
    target='jAvTranscoder.jar',
    source=avTranscoder_class )
    #source= Glob( '#build/src/AvTranscoderClass' ) )


# env.Depends( avTranscoder_class, jAvTranscoder )
# env.Depends( avTranscoder_jar, avTranscoder_class )

Export( { 'sAvTranscoder' : sAvTranscoder } )
Export( { 'AvTranscoder'  : 'AvTranscoder' } )
# Export( { 'AvTranscoder_jar': avTranscoder_class } )

installSharedLib = env.InstallVersionedLib( os.path.join( installPrefix, "lib" ), SharedAvTranscoder, SHLIBVERSION=AvTranscoderVersion )

env.Alias( "install", env.Install(os.path.join( installPrefix, "lib" ), sAvTranscoder ) )
env.Alias( "install", installSharedLib )
env.Alias( "install", env.Install(os.path.join( installPrefix, "lib" ), jAvTranscoder ) )

env.Alias( "install", env.Install(os.path.join( installPrefix, "include/AvTranscoder" ), Glob( 'AvTranscoder/*.hpp' ) ) )
env.Alias( "install", env.Install(os.path.join( installPrefix, "include/AvTranscoder/Metadatas" ), Glob( 'AvTranscoder/Metadatas/MediaMetadatasStructures.hpp' ) ) )
env.Alias( "install", env.Install(os.path.join( installPrefix, "include/AvTranscoder/DatasStructures" ), Glob( 'AvTranscoder/DatasStructures/*.hpp' ) ) )


env.Alias( "install", env.Install(os.path.join( installPrefix, "site-packages", "AvTranscoder" ), "AvTranscoder/AvTranscoder.py" ) )
env.Alias( "install", env.Install(os.path.join( installPrefix, "site-packages", "AvTranscoder" ), pyAvTranscoder ) )
